% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/comb.search.R
\name{comb.search}
\alias{comb.search}
\title{Explore all combinations of formula terms}
\usage{
comb.search(
  complete.X.df,
  y,
  formulas.l,
  formula.len = 3,
  K = 7,
  N = 10,
  seed = NULL,
  transformations = list(log10 = function(rdf, x, z) {
     log10(0.1 + abs(z) + x)
 },
    inv = function(rdf, x, z) {
     1/(0.1 + abs(z) + x)
 }),
  custom.abs.mins = list(),
  cv.norm = F
)
}
\arguments{
\item{complete.X.df}{The dataset that contains the base variables the formula is composed of (column-wise)}

\item{y}{The independent variable to be predicted with the formula}

\item{formulas.l}{The list of formulas whose terms will be considered}

\item{formula.len}{The number of terms in the formulas that will be randomly sampled.}

\item{K}{The number of parts the dataset is split into for K-fold cross-validation.}

\item{N}{The number of times the K-fold validation is repeated, shuffling the dataset row orders before each time.}

\item{seed}{An (optional) seed for deterministic run}

\item{transformations}{A list of potentially non-linear transformations that can be applied on top of the squares. Ex. \verb{order 0, transformation=log10 = log10.a}}

\item{custom.abs.mins}{A list of user-defined minimum values for dataset columns.}

\item{cv.norm}{Normalize regressors after train-validation split in inner cross-validation loop.}
}
\value{
A data.frame of formulas and the corresponding cross-validation performance measures (R-squared, absolute relative error, max cooks distance). See also \code{empty.sample}.
}
\description{
Given a set of formulas, this function systematically evaluates
all combinations of formula terms, of a given length.
}
