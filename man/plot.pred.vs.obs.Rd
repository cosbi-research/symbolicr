% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot.pred.vs.obs}
\alias{plot.pred.vs.obs}
\title{Plot "predicted vs observed" using a given formula}
\usage{
\method{plot}{pred.vs.obs}(
  complete.X.df,
  y,
  cur.vars,
  custom.abs.mins,
  K,
  N,
  transformations = list(log10 = function(rdf, x, z) {
     log10(0.1 + abs(z$min) + x)

    }, inv = function(rdf, x, z) {
     1/(0.1 + abs(z$min) + x)
 }),
  cv.norm = T,
  errors.x = 3.2,
  errors.y = 5
)
}
\arguments{
\item{complete.X.df}{The dataset to be used for the test}

\item{y}{The independent variable}

\item{cur.vars}{An array of non-linear formula terms to be tested. \code{cur.vars <- c('a','mul.a.b')} will test the formula \code{y ~ a + a*b}}

\item{custom.abs.mins}{A list of user-defined minimum values for dataset columns.}

\item{K}{The number of parts the dataset is split into for K-fold cross-validation.}

\item{N}{The number of times the K-fold validation is repeated, shuffling the dataset row orders before each time.}

\item{transformations}{A list of potentially non-linear transformations allowed in \code{cur.vars}.}

\item{cv.norm}{Normalize regressors after train-validation split in inner cross-validation loop.}

\item{errors.x}{position of R^2 and PE in plot (x axis)}

\item{errors.y}{position of R^2 and PE in plot (y axis)}
}
\description{
Predicted values are obtained out-of-sample using K-fold cross-validation repeated N times and averaged.
}
\examples{
\dontrun{
   # do actual cross-validation experiments and
   # plot results as observed vs predicted values (out-of-sample)
   # NOTE: complete.X.df should contain the columns
   # `patch_hyd_2`, `patch_pos_.` and `patch_hyd_5`
   experiments.0 <- plot.pred.vs.obs(
                      complete.X.df, y,
                      cur.vars=c('inv.patch_hyd_2','patch_hyd_5'),
                      custom.abs.mins=list(),
                      K=7,
                      N=10,
                      transformations=list(
                            "log10"=function(rdf, x, min.val){
                                           log10(0.1+abs(min.val)+x)
                                    },
                            "inv"=function(rdf, x, min.val){
                                           1/(0.1+abs(min.val)+x)
                                  }
                      )
                    )
}
}
