% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cross.validate.R
\name{cross.validate}
\alias{cross.validate}
\title{Test a non-linear formula}
\usage{
cross.validate(
  cur.dataset,
  y,
  cur.vars,
  custom.abs.mins,
  K,
  N,
  transformations,
  cv.norm
)
}
\arguments{
\item{cur.dataset}{The dataset to be used for the test}

\item{y}{The independent variable}

\item{cur.vars}{An array of non-linear formula terms to be tested. \code{cur.vars <- c('a','mul.a.b')} will test the formula \code{y ~ a + a*b}}

\item{custom.abs.mins}{A list of user-defined minimum values for dataset columns.}

\item{K}{The number of parts the dataset is split into for K-fold cross-validation.}

\item{N}{The number of times the K-fold validation is repeated, shuffling the dataset row orders before each time.}

\item{transformations}{A list of potentially non-linear transformations allowed in \code{cur.vars}.}

\item{cv.norm}{Normalize regressors after train-validation split in inner cross-validation loop.}
}
\value{
A data.frame with cross-validation results for each fold (K) and for each round (N).
}
\description{
Test using K-fold cross-validation repeated N times
}
\examples{
\dontrun{
   # do actual cross-validation experiments, record in experiments data.frame
   # all the validation-set performances.
   # NOTE: complete.X.df should contain the column `patch_hyd_2`, `patch_pos_.` and `patch_hyd_5`
   experiments.0 <- cross.validate(
                      complete.X.df, y,
                      cur.vars=c('inv.patch_hyd_2','patch_hyd_5'),
                      custom.abs.mins=list(),
                      K=7,
                      N=10,
                      transformations=list(
                            "log10"=function(x, min.val){
                                           log10(0.1+abs(min.val)+x)
                                    },
                            "inv"=function(x, min.val){
                                           1/(0.1+abs(min.val)+x)
                                  }
                      )
                    )

   experiments.1 <- cross.validate(
                      complete.X.df, y,
                      cur.vars=c('inv.mul.patch_hyd_2.patch_hyd_2','patch_pos_.'),
                      custom.abs.mins=list(),
                      K=7,
                      N=10
                    )

     # summarize cross-validation results by averaging
     errs.m <- stats::aggregate(
                     cbind(base.pe, base.cor, base.r.squared,
                           base.max.pe, base.iqr.pe, base.max.cooksd)~1,
                     data=experiments.1, FUN=mean
               )
}

}
