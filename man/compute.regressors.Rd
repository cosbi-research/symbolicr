% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute.regressors.R
\name{compute.regressors}
\alias{compute.regressors}
\title{Compute regressors of a given non-linear formula}
\usage{
compute.regressors(
  base.X.df.std,
  parsed.vars,
  transformations,
  X.mean.sd,
  regressors.min.values = NULL
)
}
\arguments{
\item{base.X.df.std}{A data.frame with the base variables that compose the terms of the non-linear formula}

\item{parsed.vars}{The results of the symbolicr::parsed.vars}

\item{transformations}{A list of potentially non-linear transformations that can be used in the formula terms.}

\item{X.mean.sd}{The \code{mean.sd} list entry of the returned value of \code{normalize}}

\item{regressors.min.values}{The output of \code{dataset.min.maxs}. If NULL, minimum values are computed on \code{base.X.df.std}. Use this parameter if you want to fix the minimum values, for instance if you compute it in a subset of the full dataset, as happens in the cross-validation.}
}
\value{
Return a data.frame with the columns corresponding to each formula term.
}
\description{
Compute regressors of a given non-linear formula
}
\examples{
\dontrun{
best.vars <- c('inv.mul.patch_hyd_5.patch_hyd_5','mul.patch_ion_3.patch_pos','patch_pos_3')

# parse variables
parsed.vars <- symbolicr::parse.vars(best.vars, regressors, transformations)
# standardize
norm.res <- symbolicr::normalize(regressors.df, custom.mins=list())
regressors.df.std <- norm.res$X.std
regressors.mean.sd <-norm.res$mean.sd
# compute regressors
regressors.def <- symbolicr::compute.regressors(regressors.df.std, parsed.vars,
                   transformations, regressors.mean.sd, regressors.min.values=NULL)
regressors.min.values <- regressors.def$min.values
formula.df <- regressors.def$regressors

# extract coefficients of given formula
dataset.std <- cbind(formula.df, y)
cur.formula.str <- paste0('y',"~",paste(best.vars, collapse=' + '))
base.lm <- lm(as.formula(base.formula), data=dataset.std)
base.lm$coefficients
}

}
\seealso{
random.search

genetic.search
}
